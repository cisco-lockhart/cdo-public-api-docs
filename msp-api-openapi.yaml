openapi: 3.0.1
info:
  title: CDO API
  description: Use the documentation to explore the endpoints CDO has to offer
  contact:
    name: CDO TAC
    email: cdo.tac@cisco.com
  version: 1.5.0
servers:
  - url: https://edge.us.cdo.cisco.com/api/rest
    description: US
  - url: https://edge.eu.cdo.cisco.com/api/rest
    description: EU
  - url: https://edge.apj.cdo.cisco.com/api/rest
    description: APJ
  - url: https://edge.aus.cdo.cisco.com/api/rest
    description: AUS
  - url: https://edge.in.cdo.cisco.com/api/rest
    description: IN
  - url: https://edge.staging.cdo.cisco.com/api/rest
    description: Staging
  - url: https://edge.scale.cdo.cisco.com/api/rest
    description: Scale
  - url: https://edge.ci.cdo.cisco.com/api/rest
    description: CI
paths:
  /v1/msp/tenants:
    get:
      tags:
        - MSP
      summary: Get CDO tenants managed by MSP Portal
      description: Get a list of CDO tenants managed by the MSP Portal.
      operationId: getMspManagedTenants
      parameters:
        - name: limit
          in: query
          description: The number of results to retrieve.
          required: false
          schema:
            maximum: 200
            minimum: 0
            type: string
            default: "50"
        - name: offset
          in: query
          description: The offset of the results retrieved. The CDO API uses the offset
            field to determine the index of the first result retrieved, and will
            retrieve `limit` results from the offset specified.
          required: false
          schema:
            minimum: 0
            type: string
            default: "0"
        - name: q
          in: query
          description: The query to execute. Use the Lucene Query Syntax to construct your
            query.
          required: false
          schema:
            type: string
          example: fieldName:fieldValue
      responses:
        "200":
          description: List of CDO tenant objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MspManagedTenantPage"
        "400":
          $ref: "#/components/responses/http400BadRequest"
        "401":
          $ref: "#/components/responses/http401Unauthorised"
        "403":
          $ref: "#/components/responses/http403Forbidden"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonApiError"
      security:
        - bearerAuth: []
    post:
      tags:
        - MSP
      summary: Add Tenant to MSP Portal (API token)
      description: "Add a tenant to the MSP Portal by providing an API token for the
        tenant. Use this endpoint to add a tenant that the user performing the
        operation is not associated with, or a tenant in a different region to
        that of the MSP Portal. Note: This endpoint can only be executed by a
        super-admin in an MSP Portal."
      operationId: addMspTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MspAddTenantInput"
        required: true
      responses:
        "201":
          description: Status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusInfo"
        "400":
          $ref: "#/components/responses/http400BadRequest"
        "401":
          $ref: "#/components/responses/http401Unauthorised"
        "403":
          $ref: "#/components/responses/http403Forbidden"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonApiError"
      security:
        - bearerAuth: []
    delete:
      tags:
        - MSP
      summary: Remove tenant from MSP Portal
      description: "Removes a tenant currently associated with the MSP Portal. Note:
        this endpoint can only be executed by a super-admin in the MSP Portal."
      operationId: removeTenantFromMspPortal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MspDeleteTenantInput"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/http400BadRequest"
        "401":
          $ref: "#/components/responses/http401Unauthorised"
        "403":
          $ref: "#/components/responses/http403Forbidden"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonApiError"
      security:
        - bearerAuth: []
  /v1/msp/tenants/{tenantUid}:
    get:
      tags:
        - MSP
      summary: Get CDO tenant managed by MSP Portal
      description: Get a CDO tenant managed by the MSP Portal.
      operationId: getMspManagedTenant
      parameters:
        - name: tenantUid
          in: path
          description: The unique identifier of the tenant in CDO.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: CDO tenant object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MspManagedTenant"
        "400":
          $ref: "#/components/responses/http400BadRequest"
        "401":
          $ref: "#/components/responses/http401Unauthorised"
        "403":
          $ref: "#/components/responses/http403Forbidden"
        "404":
          $ref: "#/components/responses/http404NotFound"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonApiError"
      security:
        - bearerAuth: []
    post:
      tags:
        - MSP
      summary: Add tenant to MSP Portal
      description: "This is an asynchronous operation to add an existing tenant that
        the user making the API call is associated with to the MSP Portal. This
        endpoint will add an API-only user to the tenant, generate an API token
        for the API-only user, and add the tenant to the MSP Portal. Note: this
        endpoint can only be executed by a super-admin in the MSP Portal who is
        also associated with the tenant being added."
      operationId: addTenantToMspPortal
      parameters:
        - name: tenantUid
          in: path
          description: Unique identifier of the tenant to add to the MSP portal.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "202":
          description: CDO Transaction object that can be used to track the status of the
            operation.
          content:
            application/json:
              schema:
                $ref: ./public-api-openapi.yaml#/components/schemas/CdoTransaction
        "400":
          $ref: "#/components/responses/http400BadRequest"
        "401":
          $ref: "#/components/responses/http401Unauthorised"
        "403":
          $ref: "#/components/responses/http403Forbidden"
        "409":
          $ref: "#/components/responses/http409Conflict"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonApiError"
      security:
        - bearerAuth: []
  /v1/msp/tenants/{tenantUid}/users:
    post:
      tags:
        - MSP
      summary: Add users to CDO tenant in MSP Portal
      description: This is an asynchronous operation to add a list of users to a
        tenant associated with the MSP Portal.
      operationId: addUsersToTenantInMspPortal
      parameters:
        - name: tenantUid
          in: path
          description: Unique identifier of the tenant to which the users will be added.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MspAddUsersToTenantInput"
        required: true
      responses:
        "202":
          description: CDO Transaction object that can be used to track the status of the
            operation.
          content:
            application/json:
              schema:
                $ref: ./public-api-openapi.yaml#/components/schemas/CdoTransaction
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonApiError"
  /v1/msp/tenants/{tenantUid}/users/{apiUserUid}/token:
    post:
      tags:
        - MSP
      summary: Generate token for API-only user on tenant managed by MSP portal
      description: Generate API Token for API-only user on a tenant managed by the MSP
        portal. API-only users are used for building automations with CDO. If
        the user ID provided is not that of an API-only user, this operation
        will fail.
      operationId: generateApiTokenForUserInTenant
      parameters:
        - name: tenantUid
          in: path
          description: The unique identifier of the tenant in CDO.
          required: true
          schema:
            type: string
            format: uuid
        - name: apiUserUid
          in: path
          description: The unique identifier of the API-only user in CDO.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "201":
          description: API Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiTokenInfo"
        "400":
          $ref: "#/components/responses/http400BadRequest"
        "401":
          $ref: "#/components/responses/http401Unauthorised"
        "403":
          $ref: "#/components/responses/http403Forbidden"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonApiError"
      security:
        - bearerAuth: []
  /v1/msp/tenants/{tenantUid}/users/groups:
    post:
      tags:
        - MSP
      summary: Add Active Directory Groups to CDO tenant in MSP Portal
      description: This is an asynchronous operation to add a list of Active Directory
        Groups to a tenant associated with the MSP Portal.
      operationId: addActiveDirectoryGroupsToTenantInMspPortal
      parameters:
        - name: tenantUid
          in: path
          description: Unique identifier of the tenant to which the user groups will be
            added. You can add a maximum of 50 user groups at a time.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              maxItems: 50
              minItems: 0
              type: array
              items:
                $ref: "#/components/schemas/ActiveDirectoryGroupCreateOrUpdateInput"
        required: true
      responses:
        "202":
          description: CDO Transaction object that can be used to track the status of the
            operation.
          content:
            application/json:
              schema:
                $ref: ./public-api-openapi.yaml#/components/schemas/CdoTransaction
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonApiError"
  /v1/msp/tenants/{tenantUid}/users/delete:
    post:
      tags:
        - MSP
      summary: Remove users from CDO tenant in MSP Portal
      description: This is an asynchronous operation to remove a list of users from a
        tenant associated with the MSP Portal.
      operationId: deleteUsersFromTenantInMspPortal
      parameters:
        - name: tenantUid
          in: path
          description: Unique identifier of the tenant from the users will be deleted
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MspDeleteUsersFromTenantInput"
        required: true
      responses:
        "202":
          description: CDO Transaction object that can be used to track the status of the
            operation.
          content:
            application/json:
              schema:
                $ref: ./public-api-openapi.yaml#/components/schemas/CdoTransaction
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonApiError"
  /v1/msp/tenants/{tenantUid}/mcd:
    post:
      tags:
        - MSP
      summary: Enable Multicloud Defense for CDO tenant in MSP Portal
      description: This is an asynchronous operation to enable Multicloud Defense for
        a tenant associated with the MSP Portal.
      operationId: enableMulticloudDefenseForTenantInMspPortal
      parameters:
        - name: tenantUid
          in: path
          description: Unique identifier of the tenant that Multicloud Defense will be
            enabled for.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "202":
          description: CDO Transaction object that can be used to track the status of the
            operation.
          content:
            application/json:
              schema:
                $ref: ./public-api-openapi.yaml#/components/schemas/CdoTransaction
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonApiError"
  /v1/msp/tenants/{tenantUid}/cdfmc:
    post:
      tags:
        - MSP
      summary: Provision cdFMC for CDO tenant in MSP Portal
      description: This is an asynchronous operation to provision a cdFMC for a tenant
        associated with the MSP Portal. This operation does not wait for the
        cdFMC to be provisioned on the target tenant, and will be marked as
        successful once the provisioning has been successfully triggered. To
        monitor the transaction on the target tenant, use the UID in the
        `TRANSACTION_UID_IN_TARGET_TENANT` key in the transaction details.
      operationId: provisionCdFmcForTenantInMspPortal
      parameters:
        - name: tenantUid
          in: path
          description: Unique identifier of the tenant that cdFMC provisioning will be
            enabled for.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "202":
          description: CDO Transaction object that can be used to track the status of the
            operation.
          content:
            application/json:
              schema:
                $ref: ./public-api-openapi.yaml#/components/schemas/CdoTransaction
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonApiError"
  /v1/msp/tenants/create:
    post:
      tags:
        - MSP
      summary: Create CDO Tenant
      description: "Create a new tenant in CDO from an MSP Portal. This endpoint
        creates a tenant, adds the tenant to the MSP Portal. If the user
        creating the tenant is not an API-only user, the user is also added to
        the tenant. Note: This endpoint can only be executed by a super-admin in
        an MSP Portal. You can create no more than 1 tenant every 30 seconds.
        Additionally, you are limited to creating a total of 100 tenants: please
        speak to support to raise this limit."
      operationId: createTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MspCreateTenantInput"
        required: true
      responses:
        "202":
          description: CDO Transaction object that can be used to track the status of the
            tenant creation.
          content:
            application/json:
              schema:
                $ref: ./public-api-openapi.yaml#/components/schemas/CdoTransaction
        "400":
          $ref: "#/components/responses/http400BadRequest"
        "401":
          $ref: "#/components/responses/http401Unauthorised"
        "403":
          $ref: "#/components/responses/http403Forbidden"
        "409":
          $ref: "#/components/responses/http409Conflict"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonApiError"
      security:
        - bearerAuth: []
components:
  schemas:
    MspAddTenantInput:
      required:
        - apiToken
      type: object
      properties:
        apiToken:
          type: string
          description: The Tenant API Access Token.
          example: FaKE-toKeN
    StatusInfo:
      type: object
      properties:
        status:
          type: string
          description: The Status of the request.
          example: OK
    MspAddUsersToTenantInput:
      required:
        - users
      type: object
      properties:
        users:
          maxItems: 50
          minItems: 0
          type: array
          description: The list of users to be added to the tenant. You can add a maximum
            of 50 users at a time.
          example: "[username: burak@cisco.com, role: ROLE_ADMIN]"
          items:
            $ref: "#/components/schemas/UserInput"
    UserInput:
      required:
        - role
        - username
      type: object
      properties:
        username:
          type: string
          description: The name of the user in CDO. This must be a valid e-mail address if
            the user is not an API-only user.
          example: smith@jones.com
        role:
          $ref: ./public-api-openapi.yaml#/components/schemas/UserRole
        apiOnlyUser:
          type: boolean
          description: Whether the user is an API-only user
          example: false
      description: The list of users to be added to the tenant. You can add a maximum
        of 50 users at a time.
      example: "[username: burak@cisco.com, role: ROLE_ADMIN]"
    ApiTokenInfo:
      type: object
      properties:
        apiToken:
          type: string
          description: The API Access Token.
          example: FaKE-toKeN
    ActiveDirectoryGroupCreateOrUpdateInput:
      required:
        - groupIdentifier
        - issuerUrl
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the Active Directory Group. CDO does not support
            special characters for this field.
          example: myusername
        role:
          type: string
          description: This determines the role for all the users included in this Active
            Directory Group.
          example: ROLE_ADMIN
        groupIdentifier:
          type: string
          description: The unique identifier, represented as a UUID, of the Active
            Directory Group in your Identity Provider (IdP).
          example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
        issuerUrl:
          type: string
          description: The Identity Provider (IdP) URL, which Cisco Defense Orchestrator
            will use to validate SAML assertions during the sign-in process.
          example: https://access.example.com/saml2/idp/metadata.php
        notes:
          type: string
          description: Any notes that are applicable to this Active Directory Group.
          example: This is an example note on the Active Directory Group.
    MspDeleteUsersFromTenantInput:
      required:
        - usernames
      type: object
      properties:
        usernames:
          maxItems: 50
          minItems: 0
          type: array
          description: The list of usernames to be removed from the MSP-managed tenant.
            You can remove a maximum of 50 users at a time.
          example:
            - username@example.com
            - username2@example.com
          items:
            type: string
            description: The list of usernames to be removed from the MSP-managed tenant.
              You can remove a maximum of 50 users at a time.
            example: '["username@example.com","username2@example.com"]'
    MspCreateTenantInput:
      required:
        - tenantName
      type: object
      properties:
        tenantName:
          pattern: "[a-zA-Z0-9-_]{1,50}"
          type: string
          description: The name of the tenant to create. The tenant name can only contain
            alphabets, numbers, -, and _, and is limited to 50 characters.
          example: acme-inc-usa
        displayName:
          type: string
          description: A human-readable display name of the tenant to create. Use this
            field only if you want the display name to be different from the
            name of the tenant.
          example: Acme Inc., United States offices
    MspManagedTenant:
      type: object
      properties:
        displayName:
          type: string
          description: A human-readable display name for the tenant. This is the tenant
            name displayed in the CDO Web UI.
          example: mytenantname
        uid:
          type: string
          description: The unique identifier of the tenant in CDO.
          format: uuid
          example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
        name:
          type: string
          description: The name of the device in CDO. Device names are unique in CDO.
          example: my-example-device
        region:
          type: string
          description: The CDO region the tenant exists in.
          example: US
          enum:
            - US
            - EU
            - APJ
            - AUS
            - IN
            - CI
            - SCALE
            - STAGING
            - UNKNOWN
    MspManagedTenantPage:
      type: object
      properties:
        count:
          type: integer
          description: The total number of results available.
          format: int32
          example: 100
        limit:
          type: integer
          description: The number of results retrieved.
          format: int32
          example: 50
        offset:
          type: integer
          description: The offset of the results retrieved. The CDO API uses the offset
            field to determine the index of the first result retrieved, and will
            retrieve `limit` results from the offset specified.
          format: int32
          example: 0
        items:
          type: array
          description: The list of items retrieved.
          items:
            $ref: "#/components/schemas/MspManagedTenant"
    MspDeleteTenantInput:
      required:
        - tenantCdoRegion
        - tenantName
      type: object
      properties:
        tenantName:
          type: string
          description: The name of the tenant to remove from the MSP portal.
          example: tenant-name
        tenantCdoRegion:
          type: string
          description: The region in which the tenant to be removed resides.
          example: prod
    AuthenticationError:
      type: object
      properties:
        error:
          type: string
          description: A human-readable error description in English.
          example: invalid_token
        errorDescription:
          type: string
          description: A human-readable error description in English.
          example: Your token is invalid
    CommonApiError:
      type: object
      properties:
        errorCode:
          type: string
          description: A unique code that describes the error.
          example: INVALID_INPUT
          enum:
            - INVALID_INPUT
            - UNAUTHORIZED
            - FORBIDDEN
            - NOT_FOUND
            - METHOD_NOT_ALLOWED
            - CONFLICT
            - TOO_MANY_REQUESTS
            - SERVER_ERROR
            - PROXY_ERROR
            - BAD_REQUEST
        errorMsg:
          type: string
          description: A human-readable error description in English.
          example: sample error
        details:
          type: object
          additionalProperties:
            type: object
            description: Additional details, if any, on the error
            example: {}
          description: Additional details, if any, on the error
          example: {}
  responses:
    http400BadRequest:
      description: Invalid input provided. Check the response for details.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CommonApiError"
    http401Unauthorised:
      description: Request not authorized.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AuthenticationError"
    http403Forbidden:
      description: User does not have sufficient privileges to perform this operation.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CommonApiError"
    http404NotFound:
      description: Entity not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CommonApiError"
    http405MethodNotAllowed:
      description: Method not allowed.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CommonApiError"
    http409Conflict:
      description: Conflict.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CommonApiError"
    http422UnprocessableEntity:
      description: Unprocessable entity.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CommonApiError"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
